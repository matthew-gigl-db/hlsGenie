# The main job for hlsGenie.
resources:
  jobs:
    hlsGenie_job:
      name: hlsGenie_job

      trigger:
        # Run this job every day, exactly one day from the last run; see https://docs.databricks.com/api/workspace/jobs/create#trigger
        periodic:
          interval: 1
          unit: DAYS

      email_notifications:
        on_failure:
          - matthew.giglia@databricks.com

      tasks:
        - task_key: 0_catalog_schema_setup
          description: Set Up the catalog and schema for the hls_genie data
          # job_cluster_key: job_cluster
          notebook_task:
            notebook_path: ../src/0-catalog-schema-setup.sql
            warehouse_id: ${var.warehouse_id}
        - task_key: 1_crtas
          description: Create Table as Select from Existing Tables Using forEach Loop  
          depends_on:
            - task_key: 0_catalog_schema_setup
          for_each_task:
            inputs: '["allergies", "careplans", "claims", "claims_transactions", "conditions", "devices", "encounters", "imaging_studies", "immunizations", "medications", "observations", "organizations", "patients", "payer_transitions",  "payers", "procedures", "providers", "supplies"]'
            concurrency: 18
            task:
              task_key: crtas_iteration
              notebook_task:
                notebook_path: ../src/1-crtas.sql
                base_parameters:
                  table_name: "{{input}}"
                warehouse_id: ${var.warehouse_id}
        - task_key: 3_set_pks
          description: Set Primary Key Constraints Using forEach Loop  
          depends_on:
            - task_key: 1_crtas
          for_each_task:
            inputs: "[{'table': 'careplans', 'pk': 'careplan_id'}
                      ,{'table': 'claims', 'pk': 'claim_id'}
                      ,{'table': 'claims_transactions', 'pk': 'claims_transactions_id'}
                      ,{'table': 'encounters', 'pk': 'encounter_id'}
                      ,{'table': 'organizations', 'pk': 'organization_id'}
                      ,{'table': 'patients', 'pk': 'patient_id'}
                      ,{'table': 'claims_transactions', 'pk': 'claims_transactions_id'}
                      ,{'table': 'payers', 'pk': 'payer_id'}
                      ,{'table': 'providers', 'pk': 'provider_id'}]"
            concurrency: 18
            task:
              task_key: pks_iteration
              notebook_task:
                notebook_path: ../src/3-set-pks.sql
                base_parameters:
                  table_name: "{{input.table}}"
                  primary_key: "{{input.pk}}"
                warehouse_id: ${var.warehouse_id}
        
      # job_clusters:
      #   - job_cluster_key: job_cluster
      #     new_cluster:
      #       spark_version: 15.4.x-scala2.12
      #       node_type_id: i3.xlarge
      #       autoscale:
      #           min_workers: 1
      #           max_workers: 4

      queue:
        enabled: true

      parameters:
        - name: bundle.workspace.file_path
          default: ${workspace.file_path}
        - name: bundle.target
          default: ${bundle.target}
        - name: bundle.catalog
          default: mgiglia
        - name: bundle.schema
          default: hls_genie