# The main job for hlsGenie.
resources:
  jobs:
    hlsGenie_job:
      name: hlsGenie_job

      trigger:
        # Run this job every day, exactly one day from the last run; see https://docs.databricks.com/api/workspace/jobs/create#trigger
        periodic:
          interval: 1
          unit: DAYS

      email_notifications:
        on_failure:
          - matthew.giglia@databricks.com

      tasks:
        - task_key: 0_catalog_schema_setup
          description: Set Up the catalog and schema for the hls_genie data
          # job_cluster_key: job_cluster
          notebook_task:
            notebook_path: ../src/0-catalog-schema-setup.sql
            warehouse_id: ${var.warehouse_id}
        - task_key: 1_crtas
          description: Create Table as Select from Existing Tables Using forEach Loop  
          depends_on:
            - task_key: 0_catalog_schema_setup
          for_each_task:
            inputs: '["allergies", "careplans", "claims", "claims_transactions", "conditions", "devices", "encounters", "imaging_studies", "immunizations", "medications", "observations", "organizations", "patients", "payer_transitions",  "payers", "procedures", "providers", "supplies"]'
            concurrency: 18
            task:
              task_key: crtas_iteration
              notebook_task:
                notebook_path: ../src/1-crtas.sql
                base_parameters:
                  table_name: "{{input}}"
                warehouse_id: ${var.warehouse_id}
        - task_key: 3_set_pks
          description: Set Primary Key Constraints Using forEach Loop  
          depends_on:
            - task_key: 1_crtas
          for_each_task:
            inputs: '[{"table": "careplans", "pk": "careplan_id"}, {"table": "claims", "pk": "claim_id"}, {"table": "claims_transactions", "pk": "claims_transaction_id"}, {"table": "encounters", "pk": "encounter_id"}, {"table": "organizations", "pk": "organization_id"}, {"table": "patients", "pk": "patient_id"}, {"table": "payers", "pk": "payer_id"}, {"table": "providers", "pk": "provider_id"}]'
            concurrency: 18
            task:
              task_key: pks_iteration
              notebook_task:
                notebook_path: ../src/3-set-pks.sql
                base_parameters:
                  table_name: "{{input.table}}"
                  primary_key: "{{input.pk}}"
                warehouse_id: ${var.warehouse_id}
        - task_key: 4_set_fks
          description: Set Foriegn Key Constraints Using forEach Loop  
          depends_on:
            - task_key: 3_set_pks
          for_each_task:
            inputs: '[{"table": "allergies", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "allergies", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"} 
            ,{"table": "careplans", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "careplans", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"} 
            ,{"table": "claims", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"} 
            ,{"table": "claims", "table_fk_column": "provider_id", "fk": "provider_id", "f_table": "providers"}
            ,{"table": "claims", "table_fk_column": "primary_patient_insurance_id", "fk": "payer_id", "f_table": "payers"} 
            ,{"table": "claims", "table_fk_column": "secondary_patient_insurance_id", "fk": "payer_id", "f_table": "payers"}  
            ,{"table": "claims", "table_fk_column": "referring_provider_id", "fk": "provider_id", "f_table": "providers"}  
            ,{"table": "claims", "table_fk_column": "supervising_provider_id", "fk": "provider_id", "f_table": "providers"} 
            ,{"table": "claims", "table_fk_column": "appointment_id", "fk": "encounter_id", "f_table": "encounters"}  
            ,{"table": "claims_transactions", "table_fk_column": "claim_id", "fk": "claim_id", "f_table": "claims"} 
            ,{"table": "claims_transactions", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "claims_transactions", "table_fk_column": "place_of_service", "fk": "organization_id", "f_table": "organizations"}
            ,{"table": "claims_transactions", "table_fk_column": "appointment_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "claims_transactions", "table_fk_column": "patient_insurance_id", "fk": "payer_id", "f_table": "payers"}
            ,{"table": "claims_transactions", "table_fk_column": "provider_id", "fk": "provider_id", "f_table": "providers"}
            ,{"table": "claims_transactions", "table_fk_column": "supervising_provider_id", "fk": "provider_id", "f_table": "providers"}
            ,{"table": "conditions", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "conditions", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "devices", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "devices", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"} 
            ,{"table": "encounters", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "encounters", "table_fk_column": "organization_id", "fk": "organization_id", "f_table": "organizations"}  
            ,{"table": "encounters", "table_fk_column": "provider_id", "fk": "provider_id", "f_table": "providers"}
            ,{"table": "encounters", "table_fk_column": "payer_id", "fk": "payer_id", "f_table": "payers"}    
            ,{"table": "imaging_studies", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "imaging_studies", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "immunizations", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "immunizations", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "medications", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "medications", "table_fk_column": "payer_id", "fk": "payer_id", "f_table": "payers"}
            ,{"table": "medications", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"} 
            ,{"table": "observations", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "observations", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "payer_transitions", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "payer_transitions", "table_fk_column": "payer_id", "fk": "payer_id", "f_table": "payers"}
            ,{"table": "payer_transitions", "table_fk_column": "secondary_patient_id", "fk": "payer_id", "f_table": "payers"}
            ,{"table": "procedures", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "procedures", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}
            ,{"table": "providers", "table_fk_column": "organization_id", "fk": "organization_id", "f_table": "organizations"}
            ,{"table": "supplies", "table_fk_column": "patient_id", "fk": "patient_id", "f_table": "patients"}
            ,{"table": "supplies", "table_fk_column": "encounter_id", "fk": "encounter_id", "f_table": "encounters"}  
            ]'
            concurrency: 24
            task:
              task_key: fks_iteration
              notebook_task:
                notebook_path: ../src/4-set-fks.sql
                base_parameters:
                  table_name: "{{input.table}}"
                  table_fk_column: "{{input.table_fk_column}}"
                  foriegn_key: "{{input.fk}}"
                  foriegn_table: "{{input.f_table}}"
                warehouse_id: ${var.warehouse_id}
        
        
      # job_clusters:
      #   - job_cluster_key: job_cluster
      #     new_cluster:
      #       spark_version: 15.4.x-scala2.12
      #       node_type_id: i3.xlarge
      #       autoscale:
      #           min_workers: 1
      #           max_workers: 4

      queue:
        enabled: true

      parameters:
        - name: bundle.workspace.file_path
          default: ${workspace.file_path}
        - name: bundle.target
          default: ${bundle.target}
        - name: bundle.catalog
          default: mgiglia
        - name: bundle.schema
          default: hls_genie